services:
    
  gateway:
    image: ${DOCKER_REGISTRY-}gateway
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    networks : 
        - MicroServiceNetwork
    depends_on :
      - booksservice
      - rentalsservice
    restart: on-failure


  yarp_gateway:
    image: ${DOCKER_REGISTRY-}yarpgateway
    build:
      context: .
      dockerfile: Yarp_gateway/Dockerfile
    networks : 
        - MicroServiceNetwork 
    depends_on :
      - booksservice
  


  booksservice:
    image: ${DOCKER_REGISTRY-}booksservice
    build:
      context: .
      dockerfile: BooksService/Dockerfile
    depends_on:
      - sqlserver
    environment:
     - ASPNETCORE_ENVIRONMENT=Development
    networks : 
        - MicroServiceNetwork
    restart: on-failure


  rentalsservice:
    image: ${DOCKER_REGISTRY-}rentalsservice
    build:
      context: .
      dockerfile: RentalsService/Dockerfile
    depends_on:
      - sqlserver
    environment:
       - ASPNETCORE_ENVIRONMENT=Development 
    networks : 
        - MicroServiceNetwork
    restart: on-failure

    
  # sqlserver:
  #   image: mcr.microsoft.com/mssql/server:2022-latest
  #   ports:
  #     - "1433:1433"
  #   environment:
  #     ACCEPT_EULA: "Y"
  #     SA_PASSWORD : "Password123"
  #   volumes:
  #     - sqlserver_data:/var/opt/mssql
  #   networks : 
  #    - MicroServiceNetwork
  #   restart: on-failure
    

networks:
  MicroServiceNetwork:


volumes:
  sqlserver_data:
   driver: bridge



